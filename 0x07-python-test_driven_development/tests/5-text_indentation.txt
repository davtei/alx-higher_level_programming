The ``text_indentation`` module
===============================

This is a test file for the function text_indentation

Using ``text_indentation``
------------------------

text_indentation takes a string argument and prints it out with a newline
after every '.', '?' and ':'.

Import function
---------------

    >>> text_indentation = __import__('5-text_indentation').text_indentation

Test cases:
----------

# Test string arg:
    >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing elit. "
    ... "Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? "
    ... "Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: "
    ... "Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. "
    ... "Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum "
    ... "rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo "
    ... "stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum "
    ... "cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio "
    ... "beatiorem! Iam ruinas videres") # doctest: +NORMALIZE_WHITESPACE
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

    >>> text_indentation("Do Hard Things")
    Do Hard Things

    >>> text_indentation("Here at ALX? We do. Hard Things")
    Here at ALX?
    <BLANKLINE>
    We do.
    <BLANKLINE>
    Hard Things

# Test empty string:
    >>> text_indentation("")


# Test string with spaces:
    >>> text_indentation("   Do Hard Things   ")
    Do Hard Things

# Test string with newline:
    >>> text_indentation("Here at ALX,\nWe do.\nHard Things")
    Here at ALX,
    We do.
    <BLANKLINE>
    Hard Things

# Test no argument:
    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'

# Test non-string args:
    >>> text_indentation(23)
    Traceback (most recent call last):
    TypeError: text must be a string

    >>> text_indentation(list(range(5)))
    Traceback (most recent call last):
    TypeError: text must be a string

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
