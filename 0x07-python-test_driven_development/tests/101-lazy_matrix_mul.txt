The ``lazy_matrix_mul`` module
==============================

This is a test file for the function lazy_matrix_mul

Using ``lazy_matrix_mul``
-----------------------

lazy_matrix_mul takes arguments of two matrices and returns the product

Import function
---------------

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test cases:
----------

# Test integers:

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    [[ 7 10]
     [15 22]]

    >>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
    [[13 16]]


# Test combination of integers and floats:
    >>> print(lazy_matrix_mul([[1, 2.1], [3, 4]], [[1.8, 2], [3, 4.2]]))
    [[ 8.1  10.82]
     [17.4  22.8 ]]

# Test negative elements:
    >>> print(lazy_matrix_mul([[1, 2], [3, -4]], [[1, -2], [-3, 4]]))
    [[ -5   6]
     [ 15 -22]]

# Test row size not equal:
    >>> print(lazy_matrix_mul([[1, 2, 5], [1, 5], [3, 4, 6]], [[1, 2, 5], [3, 4, 6]]))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [5, 6, 7], [3, 4]]))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.

# Test m_a rows not equal to m_b columns:
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 3 is different from 2)

    >>> print(lazy_matrix_mul([[1, 2, 5], [3, 4, 6]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)

# Test non-numeric elements:
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, "2"], [3, 4]]))
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int32'), dtype('<U11')) -> None

    >>> print(lazy_matrix_mul([[1, "2"], [3, 4]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U11'), dtype('int32')) -> None

# Test non-matrices:
    >>> print(lazy_matrix_mul("alx", [[1, -2], [-3, 4]]))
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U3'), dtype('int32')) -> None

    >>> print(lazy_matrix_mul([[1, -2], [-3, 4]], "alx"))
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int32'), dtype('<U3')) -> None

    >>> print(lazy_matrix_mul([2, 4, 6, 8], [[1, -2], [-3, 4]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 4)

    >>> print(lazy_matrix_mul([[1, -2], [-3, 4]], [2, 4, 6, 8]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 4 is different from 2)

# Test only one matrix provided:
    >>> print(lazy_matrix_mul([[1, -2], [-3, 4]]))
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

# Test no arguments provided:
    >>> print(lazy_matrix_mul())
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

# Test empty matrices:
    >>> print(lazy_matrix_mul([[]], [[1, -2], [-3, 4]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 0)

    >>> print(lazy_matrix_mul([[1, -2], [-3, 4]], [[]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

    >>> print(lazy_matrix_mul([[]], [[]]))
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

    >>> print(lazy_matrix_mul([[]]))
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
